<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stanley Solutions Blog - development</title><link href="https://blog.stanleysolutionsnw.com/" rel="alternate"></link><link href="https://blog.stanleysolutionsnw.com/feeds/development.atom.xml" rel="self"></link><id>https://blog.stanleysolutionsnw.com/</id><updated>2024-11-26T10:35:00-08:00</updated><subtitle>engineering and creativity - all under one hat</subtitle><entry><title>A Collaborative Word Cloud for Teaching</title><link href="https://blog.stanleysolutionsnw.com/a-collaborative-wordcloud-for-teaching.html" rel="alternate"></link><published>2024-11-26T10:35:00-08:00</published><updated>2024-11-26T10:35:00-08:00</updated><author><name>Joe Stanley</name></author><id>tag:blog.stanleysolutionsnw.com,2024-11-26:/a-collaborative-wordcloud-for-teaching.html</id><summary type="html">&lt;p&gt;A few months ago I wrapped up some work on a fun little project I developed for some teaching exercises. Let me tell you about it!&lt;/p&gt;</summary><content type="html">&lt;p&gt;It started back in June when I was frantically preparing some exercises to teach and prepare a group of the College Staff to support Idaho's
&lt;a href="https://www.uidaho.edu/extension/4h/events/stac"&gt;State Teen Association Convention&lt;/a&gt;. I was trying to prepare some training to align the team.
That's not something I've done before, and I can't make any claims that it's perfect, but I think it was well received.&lt;/p&gt;
&lt;p&gt;Let me explain what that exercise really was...&lt;/p&gt;
&lt;p&gt;I used a handful of different materials to try making it both fun and engaging. Some of those materials were from National 4-H's
&lt;a href="https://www.4-h.org/wp-content/uploads/2024/04/09105552/4H-Harmony-Guide-2024.pdf"&gt;"Meet Up Buddy"&lt;/a&gt; card activity. Some were of my own
creation to encourage the College Staff to think about how to prioritize things when time constraints pressed them. My alignment training
was where we started, it was basically a challenge to the participants. Here's how I set it up, though, maybe not in so many well-placed words.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4-H is full of projects. So many things for youth to engage with and to find their spark. While this is wonderful, it does pose a bit of a
challenge. Before I explain, I want you to think about all the words that come to mind when you think of 4-H.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At this point, I'd share a QR code with them that they could use to navigate to the game page. The game page provides participants with a
text box where they can enter each word that they think about. When they enter a word, a new text box appears so they can enter another word.
As they'd enter words, my system keeps track of them (hidden, of course) and begins to create a word cloud with all of their entries.&lt;/p&gt;
&lt;p&gt;When I decide that they've had enough time (normally it looks like they've run out of ideas for words), then I shut down the entry system and
reveal the word cloud generated from all of their entries. At the end of it all, we're left with something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="college staff word cloud" src="https://immich.stanleysolutionsnw.com/api/assets/5692b76b-9049-4ebc-b0b8-4812c751716a/thumbnail?size=preview&amp;amp;key=klMHZEmZIUXG5UF9NeiFfKmLCZOcCm99k9mdI6Rw_U9TbJhC6zepXq-tEantGNrj748"&gt;&lt;/p&gt;
&lt;p&gt;That gives us something to talk about.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Look at this. These are all the things that our little group thinks about when we think about 4-H. But what do we share?&lt;/p&gt;
&lt;p&gt;Often, we're working in our own little silos, not terribly focussed on the same things that other leaders are focussed on. That can make
working with other leaders difficult. We're each moving in our own direction, and sometimes, that feels like pulling a ball of yarn from
different ends; just making the knot perpetually tighter.&lt;/p&gt;
&lt;p&gt;But this shows us something. Even when we are moving in different directions, it's possible to find some common ground. These are the first
things that &lt;em&gt;you&lt;/em&gt; thought of when I asked you to think about 4-H. These are the inately tied to your path in 4-H, and see how we have
something common shared between us?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At that point, I'd talk about why I think it's good to get a common understanding of what is shared between the group, and how I like to think
about using this commonality with people to find shared ground on certain topics. To move forward together on what we see as the shared pathway.&lt;/p&gt;
&lt;p&gt;It worked pretty well for our little team, I was able to refer back to it a number of times, and it made working with the team all the more
pleasant and constructive.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The exercise wasn't purely without its challenges, however. In fact, we discovered that the web-service that I'd chosen to use only allowed
something like 10 players, and each player could only enter 15 words. Not exactly the sort of restrictions you want to run into during an
exercise. Add to that, the fact that you've got to have a solid internet connection, which is not always easy in 4-H programming in the state
of Idaho.&lt;/p&gt;
&lt;p&gt;That's why I returned to my recent build, the &lt;a href="/making-portable-digital-learning.html"&gt;PortaServer&lt;/a&gt;. My little (not so little, actually) ammo
can with a stack of mini computers. I could serve my own system there, and since I run the network, I could also make the address very easy
to access.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Enter: &lt;a href="https://github.com/engineerjoe440/wordwall"&gt;WordWall&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's pretty simple in concept. A little more effort in practice, but that's alright. I made a Python FastAPI server with a tiny, ephemeral
SQLite database backing it to run all the management of adding, removing, and sharing words. Tie that with a Material-UI based React frontend,
and I've got a relatively simple little service that I can run on my own system.&lt;/p&gt;
&lt;p&gt;Now, I've got something I can take with me, wherever I travel to align 4-H leaders, youth, or others.&lt;/p&gt;</content><category term="development"></category><category term="python"></category><category term="react"></category><category term="teaching"></category><category term="youth"></category><category term="software"></category><category term="development"></category><category term="fastapi"></category><category term="material-ui"></category></entry><entry><title>Basic Auth without the Hubub in NGINX</title><link href="https://blog.stanleysolutionsnw.com/basic-auth-without-the-hubub-in-nginx.html" rel="alternate"></link><published>2024-11-08T20:49:00-08:00</published><updated>2024-11-08T20:49:00-08:00</updated><author><name>Joe Stanley</name></author><id>tag:blog.stanleysolutionsnw.com,2024-11-08:/basic-auth-without-the-hubub-in-nginx.html</id><summary type="html">&lt;p&gt;Today I learned that it IS possible to make a relatively simple static site that has some automatic authentication built in to NGINX that will use a custom HTML file for the login page as opposed to the basic-auth prompt that gets so annoying.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Okay... As I write this, I'm falling asleep. Hah! So I'll make this quick.&lt;/p&gt;
&lt;p&gt;I wanted a website that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;was a static site (no ORM, database, etc.)&lt;/li&gt;
&lt;li&gt;had some basic authentication (yeah, BasicAuth is fine)&lt;/li&gt;
&lt;li&gt;had a custom login page with my own styled HTML/CSS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, I've known that NGINX allows users to configure basic auth for some time.
I've done that, before. But I didn't know how to get it to do the custom HTML in
conjunction with that. Here's what I did.&lt;/p&gt;
&lt;p&gt;I set up a route that would allow any login, or static file to be served without
authentication.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;^/(login|css|fonts|img|js|404.html)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;root&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../public/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I had the main part of the website set up to use basic auth. Even had the
&lt;code&gt;401&lt;/code&gt; redirect in there to manage spitting users out in the right spot. But that
used the annoying "basic auth popup" that I was trying to avoid.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;root&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../public/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;auth_basic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Restricted&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;auth_basic_user_file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../.htpasswd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_intercept_errors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;error_page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;/login/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;What to do, what to do...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After I don't even know how much searching, it dawned on me that I could use an
&lt;code&gt;if&lt;/code&gt; statement to do a redirect, and after a little more tweaking, and learning
how to "hack" together a logical "AND" between three &lt;code&gt;if&lt;/code&gt; statements, I was able
to come up with this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$http_authorization&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;!~*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;^/(login|css|fonts|img|js|404.html))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$host/login/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If there's no authorization header and the request URI isn't the login or static
file, then set a redirect to the &lt;code&gt;/login&lt;/code&gt; page. TADA!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;server_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;k3b4h.idaho4h.org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;client_max_body_size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;512M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;client_body_timeout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;300s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$http_authorization&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;!~*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;^/(login|css|fonts|img|js|404.html))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$temp_cache&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$host/login/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;root&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../public/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;auth_basic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Restricted&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;auth_basic_user_file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../.htpasswd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_intercept_errors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;error_page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;/login/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;^/(login|css|fonts|img|js|404.html)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;root&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/home/.../public/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;ssl_certificate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/etc/...fullchain.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;ssl_certificate_key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/etc/...privkey.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now... I've yet to get some javascript cobbled together to actually set the
authorization header. That's next, but I &lt;em&gt;think&lt;/em&gt; that should be manageable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;God, I hope so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Good night!&lt;/p&gt;
&lt;h2&gt;Update:&lt;/h2&gt;
&lt;p&gt;Dangit. That won't work at all. Seems that while it does everything that I want
in terms of the visual component, it won't let me actually set the authorization
header for the browser to retain it for subsequent navigation.&lt;/p&gt;
&lt;p&gt;Maybe there's a workaround for it, but I haven't found one yet. I'll have to
keep thinking/looking.&lt;/p&gt;</content><category term="development"></category><category term="auth"></category><category term="html"></category><category term="http"></category><category term="nginx"></category><category term="proxy"></category></entry><entry><title>Write a Good Framework - ONCE.</title><link href="https://blog.stanleysolutionsnw.com/write-framework-once.html" rel="alternate"></link><published>2020-09-20T10:26:00-07:00</published><updated>2020-09-20T10:26:00-07:00</updated><author><name>Joe Stanley</name></author><id>tag:blog.stanleysolutionsnw.com,2020-09-20:/write-framework-once.html</id><summary type="html">&lt;p class="first last"&gt;We all want that next great application; NOW. And we KNOW that we can just hash out this great new thing. But where does that leave us the next time we want to do the same sort of thing?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;C'mon, every developer has had that epiphany moment:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;I know, I can just write this thing now, and I'll have exactly what I need, and I'll
never need to touch it again; I'll never need to add more to it, and it will never
change.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Yeah. Right.&lt;/p&gt;
&lt;p&gt;We wish it worked that way, but let's be honest. Projects develop, add scope, change, and
sometimes, they morph into something new entirely. Actually, that's often where great code
comes from. The best projects are the butterflies of the development world. They start as
a simple little caterpillar, but at some point along the line, they change into something
far more elegant and beautiful.&lt;/p&gt;
&lt;p&gt;That's why I'm writing this plea to developers out there in the &amp;quot;real world.&amp;quot; We know that
you could just write this little thing, but isn't it nice to get the &lt;em&gt;framework&lt;/em&gt; right the
first time so that when you need to revisit that code, it'll be so much easier. Or, better
yet, isn't it better to prepare the project for the &amp;quot;&lt;em&gt;next guy&lt;/em&gt;&amp;quot; who comes along to make
your framework into something incredible.&lt;/p&gt;
&lt;p&gt;I guess I've devolved into rambling, as usual, but my point is this: when you spend the time
to develop the framework &lt;em&gt;the right way&lt;/em&gt; the first time, you and all of your colleagues will
thank you. It will make things just &lt;strong&gt;that much easier&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I've had a handful of experiences with this myself. I started on a couple projects at work
where I developed something that I &lt;em&gt;thought&lt;/em&gt; was a great system, and didn't really require
a superior framework. This inevitably saved time in the short-term, but it bit me later.&lt;/p&gt;
&lt;p&gt;As it turned out, I recently realized that I was re-writing the same code over, and over,
and over again every time I had to touch the code. In the end, as it seems, I didn't spend
enough time writing the framework to begin, and that hurt me.&lt;/p&gt;
&lt;div class="section" id="here-s-the-takeaway"&gt;
&lt;h2&gt;Here's the Takeaway:&lt;/h2&gt;
&lt;p&gt;Long story short, we all love just &amp;quot;pulling in&amp;quot; a library that does the &amp;quot;dirty work&amp;quot; for us.
I think it's time that we focus on getting those libraries right from the onset, so we don't
need to keep re-doing our own work, or the work of others.&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;
&lt;p&gt;I'd say drop me a note in the comments, but I haven't quite gotten that set up yet. So, for
now, just keep fighting the good fight, and &lt;em&gt;write those libraries!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Development"></category><category term="python"></category><category term="iec-61131"></category><category term="development"></category></entry></feed>