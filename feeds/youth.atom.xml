<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stanley Solutions Blog - Youth</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/" rel="alternate"></link><link href="https://engineerjoe440.github.io/stanley-solutions-blog/feeds/youth.atom.xml" rel="self"></link><id>https://engineerjoe440.github.io/stanley-solutions-blog/</id><updated>2022-02-09T07:54:00-08:00</updated><subtitle>Engineering and creativity - all under one hat.</subtitle><entry><title>Think you Know Everything?</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/think-you-know-everything.html" rel="alternate"></link><published>2022-02-08T19:50:00-08:00</published><updated>2022-02-09T07:54:00-08:00</updated><author><name>Joe Stanley</name></author><id>tag:engineerjoe440.github.io,2022-02-08:/stanley-solutions-blog/think-you-know-everything.html</id><summary type="html">&lt;p&gt;A step back down memory-lane, I pulled out the ol' 'Quiz Board' for a presentation!&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is gonna be a quick one, but I just wanted to share some photos of my old high-school
engineering project, the &lt;strong&gt;&lt;em&gt;"Quiz Board"&lt;/em&gt;&lt;/strong&gt;. It was a project of mine to make a &lt;em&gt;cool&lt;/em&gt;
and engaging public education system. I used it at the county fair to help teach folks about
swine, since that was my 4-H project.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://engineerjoe440.github.io/stanley-solutions-blog/images/quiz-board/22-02-08 17-02-31 1227.jpg" style="width: 40%" alt="The Quiz"&gt;&lt;/p&gt;
&lt;h2&gt;The Inspiration&lt;/h2&gt;
&lt;p&gt;Long ago, in a town far away, I was given an old "quiz board" to fix. It was literally a board,
and it had screws protruding from both sides. The system was simple. There were questions printed
on the left side, answers printed on the right. If you connected the provided wires using connected
alligator clips the board would tell you if you were "right" by illuminating an little bulb.
Pretty neat little idea for kids, you connect a wire on the left to select the question, then you
can connect the wire on the right to select an answer. If you were right, the bulb lights up!&lt;/p&gt;
&lt;h4&gt;But it was boring!&lt;/h4&gt;
&lt;p&gt;Or at least, I thought it was. There was no &lt;em&gt;real&lt;/em&gt; feedback from the system if you got the answer
wrong, and it was kinda sad, for that reason. Needless to say, I wasn't satisfied. It wasn't long
after I repaired that board before I was starting to mull over ideas of how I could make my own
and improve upon the design.&lt;/p&gt;
&lt;p&gt;Around the same time, I was learning about how Walt Disney had used rotating "drums" with little
depressions to make practical control systems before precise timing in microcontrollers was easy
and practical. I distinctly remember an old clip from some archive of Walt giving a tour of some
of the Haunted Mansion Audio-Animatronic control systems, and showing how these big rotating drums
would depress and release valve controlls for the pneumatics. These valves would then, in turn,
operate the cylinders responsible for actually moving the animatronics around, and by coordinating
all of these depressions at just the right speed and timing, the Disney Imagineers could craft
some spectacular repeating animations. Wonderful!&lt;/p&gt;
&lt;p&gt;I liked that idea, and I had NO idea how microcontrollers worked. I didn't even have an Arduino
yet, and I had never even seen real software code (needless to say, my parents were not the
biggest tech-geeks in the area). So I started mulling this over. After what must've been a few
months (really, I can't remember), an idea came to me. I realized that those little snap-action
switches have two positions, one defaulting to ON, the other defaulting to OFF; more commonly
referred to as "Normally Closed" and "Normally Open," respectively. That meant that I could use
two switches pretty easily to "route" electricity for a couple of buttons labeled "TRUE" and
"FALSE". The switch associated with the &lt;em&gt;right&lt;/em&gt; answer would be pressed, the other would not.
That meant that I could easily "line-up" the switches so that if the user pressed the &lt;em&gt;right&lt;/em&gt;
button, it would turn on a green light, and if they pressed the wrong button, it would turn on
the red light.&lt;/p&gt;
&lt;p&gt;Thus, "The Quiz" was born.&lt;/p&gt;
&lt;p&gt;&lt;!-- &gt;&gt;&gt;&gt; Start &gt;&gt;&gt;&gt;&gt; PHOTO plugin: inline gallery &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; --&gt;
&lt;div class="gallery"&gt;
        &lt;h1&gt;&lt;/h1&gt;
                    &lt;a href="/photos/quiz-board/22-02-08 16-59-31 1225.jpg" title="22-02-08 16-59-31 1225.jpg" exif="" caption=""&gt;&lt;img src="/photos/quiz-board/22-02-08 16-59-31 1225t.jpg"&gt;&lt;/a&gt;
                    &lt;a href="/photos/quiz-board/22-02-08 16-59-34 1226.jpg" title="22-02-08 16-59-34 1226.jpg" exif="" caption=""&gt;&lt;img src="/photos/quiz-board/22-02-08 16-59-34 1226t.jpg"&gt;&lt;/a&gt;
                    &lt;a href="/photos/quiz-board/22-02-08 17-02-31 1227.jpg" title="22-02-08 17-02-31 1227.jpg" exif="" caption=""&gt;&lt;img src="/photos/quiz-board/22-02-08 17-02-31 1227t.jpg"&gt;&lt;/a&gt;
                    &lt;a href="/photos/quiz-board/22-02-08 17-02-35 1228.jpg" title="22-02-08 17-02-35 1228.jpg" exif="" caption=""&gt;&lt;img src="/photos/quiz-board/22-02-08 17-02-35 1228t.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;!-- &lt;&lt;&lt;&lt; End &lt;&lt;&lt;&lt;&lt; PHOTO plugin: inline gallery &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; --&gt;&lt;/p&gt;
&lt;h4&gt;Processing with Electro-Mechanical Logic&lt;/h4&gt;
&lt;p&gt;I love touting that this machine had a 3-bit processor; which, if you stretch your imagination
a little bit, I guess that &lt;em&gt;is&lt;/em&gt; true since it had three switches, and their positions all
mattered for the result of the question/answer. I've already explained what two of the switches
were for, but that third switch was responsible for keeping the whole thing moving in just the
right way. That's right, that last switch was responsible for controlling the motor.&lt;/p&gt;
&lt;p&gt;The whole system revolved -pun intended- around this rotating drum idea. Questions were printed
on a sheet of paper taped to a 4" diameter piece of PVC pipe, and the pipe turned to line the
questions up with a "viewing window" in the face of this gargantuan machine. When the user
pressed "start" that would deactivate the "constant" source of power for the motor, so as soon
as the next switch press happens, the motor would stop. This would, in turn, line up the
question with the viewing window, and then the user could read and respond to the question.&lt;/p&gt;
&lt;p&gt;This whole project took my father and I much of the year to build. In all, probably between one-
and two-hundred hours, total. When it was finally completed, I got to take the machine with me
to the Clearwater County fair, and load it up with questions about pigs to help entertain and
educate the public.&lt;/p&gt;</content><category term="Youth"></category><category term="Analog"></category><category term="Logic"></category><category term="4-H"></category><category term="Knowledge"></category><category term="Throwback"></category></entry><entry><title>React.js, Python, Pictures, and 4-H!</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/reactjs-python-pictures-and-4h.html" rel="alternate"></link><published>2022-01-26T17:35:00-08:00</published><updated>2022-01-26T17:35:00-08:00</updated><author><name>Joe Stanley</name></author><id>tag:engineerjoe440.github.io,2022-01-26:/stanley-solutions-blog/reactjs-python-pictures-and-4h.html</id><summary type="html">&lt;p&gt;How do you get nearly one-hundred high-school age youth to collect nearly as many photos for a competition at a youth conference? Facebook? Google-Drive? How about Python...?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Do you remember going to those youth conferences when you were younger?&lt;/p&gt;
&lt;p&gt;I do!&lt;/p&gt;
&lt;p&gt;I loved them!&lt;/p&gt;
&lt;p&gt;In Idaho 4-H, there's an annual conference known as the
&lt;a href="https://www.uidaho.edu/extension/4h/events/stac"&gt;"State Teen Association Convention,"&lt;/a&gt; though, admittedly,
when I attended, it was known as "Teen Conference." Essentially, it's a conference focused on giving youth from
around the state the opportunity to explore what opportunities exist after high school. Youth get to spend about
four days on campus at the University of Idaho, and explore various career- and education-focused "tracks."&lt;/p&gt;
&lt;p&gt;But what would a youth-conference be, without some social activities and competition?&lt;/p&gt;
&lt;p&gt;Idaho "STAC" has a number of social activities and competitions in addition to the educational portions to help
bring youth across the state together and help them build new connections. One of the competitions that happens
throughout the conference is what's known as "district competitions."&lt;/p&gt;
&lt;h3&gt;What are the districts, and what are the district competitions?&lt;/h3&gt;
&lt;p&gt;Well, the state of Idaho is broken into four regional districts: Northern, Southern, Central, and Eastern. The
districts help keep some organization across the state, and at STAC, they are the dividing line(s) for youth
meetings.&lt;/p&gt;
&lt;p&gt;Throughout the conference the districts compete against one another for points in district competitions. After
all, who doesn't like a little good-humored, friendly competition? Now, to be honest, I don't think that there's
any specific "prize" to come out of winning, but it's a lot of fun.&lt;/p&gt;
&lt;p&gt;There are competitions focusing in a few key areas including creativity (photo contest, skit performances) and
healthy living (skit/dance performances).&lt;/p&gt;
&lt;h3&gt;The challenge...&lt;/h3&gt;
&lt;p&gt;The photo competition is always an interesting challenge to host. It ends up becoming something of a technical
challenge to administer since there's no "effective" way to collect the photos into one place. In years past
all forms of systems have been used; everything from Facebook with hashtags, to public Google Drives, email, and
more... It's been a pain!&lt;/p&gt;
&lt;p&gt;Last year something dawned on me, we could create something a little more interesting!&lt;/p&gt;
&lt;p&gt;What if we created a simple little web-app to allow the youth to upload the photos they take for the competition,
and made it a requirement for the youth to agree to a photo-consent-release. So that's what we got started on!&lt;/p&gt;
&lt;h3&gt;The Solution:&lt;/h3&gt;
&lt;p&gt;I spent some time a few months back doing some research on what we could use for an effective photo storage system.
I wanted to use an open-source project that would allow API-based access to upload photos, and whose management
is simple, intuitive, and without too many frills. I did some poking around, and playing with different services
on a $5/month Linode (love those things for testing, by-the-way), and I finally landed on
&lt;a href="https://lycheeorg.github.io/"&gt;Lychee&lt;/a&gt; for a couple of reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a terrific, and simple &lt;code&gt;docker-compose&lt;/code&gt; configuration provided by &lt;a href="https://docs.linuxserver.io/images/docker-lychee"&gt;LinuxServer.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The API is VERY WELL documented, and exceedingly simple&lt;/li&gt;
&lt;li&gt;There's already a &lt;a href="https://pypi.org/project/pychee/"&gt;Python Lychee client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The user interface is very simple and focused without too many frills&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using Lychee as the "back-end storage" for this project, I can create a nice "wrapper" on the front to make an easy
web-app to allow youth delegates to upload their photos. To do that, I can use my slick little Python/React.js
integrated web-server pairing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Want to see what it's looking like?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://engineerjoe440.github.io/stanley-solutions-blog/images/idaho4h-photo-upload/Screenshot_20220126_174318.png" style="width: 100%" alt="Idaho 4-H Photo Upload"&gt;&lt;/p&gt;
&lt;h3&gt;Other Perks:&lt;/h3&gt;
&lt;p&gt;Pretty early on in this project's investigation, I met a 4-H'er who is actually learning about some programming, and
so we've been working together on developing the web-front-end interface for youth.&lt;/p&gt;
&lt;p&gt;I've got quite a bit more fun stories to tell about how we're using my GitLab and Jenkins instances to help us keep
this project moving, but that will be coming a little later. That said, take a look at the consent form that we've built,
and the dark-mode that we were able to build!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://engineerjoe440.github.io/stanley-solutions-blog/images/idaho4h-photo-upload/Screenshot_20220126_174254.png" style="width: 100%" alt="Idaho 4-H Photo Upload"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://engineerjoe440.github.io/stanley-solutions-blog/images/idaho4h-photo-upload/Screenshot_20220126_174342.png" style="width: 100%" alt="Idaho 4-H Photo Upload"&gt;&lt;/p&gt;</content><category term="Youth"></category><category term="Python"></category><category term="React.Js"></category><category term="4H"></category><category term="Fastapi"></category><category term="Materialui"></category><category term="Linode"></category></entry></feed>