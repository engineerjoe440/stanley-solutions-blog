<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stanley Solutions Blog - education</title><link href="https://blog.stanleysolutionsnw.com/" rel="alternate"></link><link href="https://blog.stanleysolutionsnw.com/feeds/education.atom.xml" rel="self"></link><id>https://blog.stanleysolutionsnw.com/</id><updated>2025-05-09T07:36:00-07:00</updated><subtitle>engineering and creativity - all under one hat</subtitle><entry><title>Complex, Calculated Coffee!</title><link href="https://blog.stanleysolutionsnw.com/complex-calculated-coffee.html" rel="alternate"></link><published>2025-05-09T07:36:00-07:00</published><updated>2025-05-09T07:36:00-07:00</updated><author><name>Joe Stanley</name></author><id>tag:blog.stanleysolutionsnw.com,2025-05-09:/complex-calculated-coffee.html</id><summary type="html">&lt;p&gt;Admit it, you've always wanted an overly-complex coffee-making machine, haven't you? Something that's innately simple to use, but a complex masterpiece to marvel at; especially on those early Saturday mornings when the caffeine hasn't kicked in yet. Well, I've done it. I've built just that. I call it... the 5282. Let me explain.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This little endeavor started as a joke. No kidding. I'm not going to tell the whole story here, but if you ask nicely enough, I might tell you in person.
If you know, you know...&lt;/p&gt;
&lt;p&gt;I wanted to make a single-cup coffee maker that runs off of an &lt;a href="https://selinc.com/products/2411"&gt;SEL-2411&lt;/a&gt;. The SEL-2411 can use digital or analog inputs to
interpret the various sensors, and it has a variety of output mechanisms which may be used to do all sorts of fun things with controlling the coffee-maker.&lt;/p&gt;
&lt;p&gt;In one of my last days of teaching ECE101 at the University of Idaho, I brought in my 2411 to class so that I could collaborate with the students to design
the digital logic circuit required to operate the controller. We started with a simple control for the LED and pump motor, but after some further setup, I
realized it was going to be a bit more complex. Not unwieldy, but certainly more than we'd accomplished in class. What follows is the complete logic.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.stanleysolutionsnw.com/images/SEL-5282.drawio.svg" style="width: 100%;" alt="digital logic for the complete controller"&gt;&lt;/p&gt;
&lt;p&gt;Of course... this is very way over-complicated. But hey... We do this stuff because it's fun and interesting. And we learn something new with each new project.&lt;/p&gt;
&lt;p&gt;This particular system was fun for me to learn about the particular design that was used in the coffee machine I disassembled to accomplish my goal. There was
a lot more sensing involved than I originally expected. In total, the I/O list was as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2x&lt;/em&gt; Thermistors (likely around 50kÎ© nominal according to my research -- not tested, yet)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1x&lt;/em&gt; capacitive water sensor&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1x&lt;/em&gt; rotary encoder&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1x&lt;/em&gt; 12V solenoid valve&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1x&lt;/em&gt; 12V pump motor&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1x&lt;/em&gt; 120V heater element&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all quite a bit of sensing and closed-loop control design to put together. So I just decided I wasn't going to do any of that. I opted to simply use an
open-loop control mode based purely on timing. I suspect that the original system really just used the sensing to increase or decrease the motor speed in
order to manipulate the residence time. The residence time is, of course, the time which the water would spend in the heating apparatus (a metal tube with the
heating element running through it). The longer the water remains in the heater; the hotter it gets! Simple, isn't it?&lt;/p&gt;
&lt;p&gt;Well, my design took a &lt;em&gt;different&lt;/em&gt; approach. That's right. I took the approach of just turning the pump on "full blast." Who needs temperature adjustments, anyway?
That did result in my inability to achieve &lt;em&gt;quite&lt;/em&gt; the same temperatures that the original coffee machine controls achieved. But I got close enough. In fact, if
you look closely at the output controls (enlarged below to highlight some of the important details), you'll notice that there's actually a timing system for
pulsing one of the outputs in a 4-seconds-on, 1-second-off pattern; that's an 80% duty cycle for a 5-second periodic signal. I used this to control the solenoid
valve which is used to switch between pumping water into the single-use-pod to a recirculating system. Using that recirculation on a cycle allows me to heat up
the water just a little more. Just what we needed!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.stanleysolutionsnw.com/images/SEL-5282_timing.drawio.svg" style="width: 100%;" alt="output control timing"&gt;&lt;/p&gt;
&lt;p&gt;Now, that's all well-and-good, but a big part of this is also working out the LED and user-interfacing bit. This coffee maker won't be very good if I can't use
it to actually inform a user whether it's set for small, medium, or large (8, 10, or 12oz). This whole user-interfacing bit was where I actually had some
students work with me in class (I quite enjoyed this bit, actually). In class, we established what the goal for the LEDs and push-buttons were going to be, then,
using the digital logic principles we'd worked on through the semester, we designed the circuit.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.stanleysolutionsnw.com/images/SEL-5282_ui.drawio.svg" style="width: 100%;" alt="user interface control"&gt;&lt;/p&gt;
&lt;p&gt;Worth noting is that this logic design is slightly modified from what we designed in the class, but that's really because I changed my mind when the LED should
blink versus being solid. I wanted blinking to indicate to the user they may change the setting (for small/medium/large); and I wanted the solid LED to indicate
which selection had been made.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Well, that's probably enough for now. If I'm feeling ambitious later, I might just post the settings here, too. But for now, have a great summer!&lt;/p&gt;
&lt;iframe src='https://immich.stanleysolutionsnw.com/share/AQfx1LH7oW4xQEWuB2iHjRdmJsV2s4TZjJoTXKlKnk6Y5qIl0ovMlgZZ4W6HFF21sIc'
width='100%' height='600px' frameborder='0'&gt;
&lt;/iframe&gt;</content><category term="education"></category><category term="coffee"></category><category term="coffee-maker"></category><category term="control"></category><category term="controller"></category><category term="digital-logic"></category><category term="logic"></category><category term="plc"></category><category term="programming"></category><category term="relay"></category><category term="iot"></category><category term="selogic"></category></entry><entry><title>Jupyter Lab Setup for Electrical Engineers</title><link href="https://blog.stanleysolutionsnw.com/jupyter-lab-setup-for-electrical-engineers.html" rel="alternate"></link><published>2025-03-25T06:49:00-07:00</published><updated>2025-03-25T06:49:00-07:00</updated><author><name>Joe Stanley</name></author><id>tag:blog.stanleysolutionsnw.com,2025-03-25:/jupyter-lab-setup-for-electrical-engineers.html</id><summary type="html">&lt;p&gt;Over the years, I've tried a few installation methods for Jupyter Notebooks and Jupyter lab. I've finally found one that I think is a little simpler than some of the others. Let me share that now for the benefit of Electrical Engineering students.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://jupyter.org/"&gt;Jupyter&lt;/a&gt; is one of the fastest-growing exploratory tools in Python, one of the fastest-growing
languages in the early 2020's. I've used Python throughout my educational and professional career for simple calculations
all the way up to complex operational control systems. While I won't claim Python is the best-suited tool for every
application. It's my first go-to. If it won't work for something, I will often find that quicker in Python, and I'll be
directed to the "right tool" for that particular job. Just like in spoken and written languages, there's often a language
particularly well-suited for each application.&lt;/p&gt;
&lt;p&gt;Jupyter is a framework which allows scientists, engineers, researchers, and others to quickly dive into the Python space
with great power and efficiency. It provides a clean web-interface for individuals and teams to work together on projects,
and is now recommended by a number of resources for engineers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://artofdataengineering.com/why-every-data-engineer-needs-jupyter/"&gt;&lt;em&gt;Why Every Data Engineer Needs Jupyter&lt;/em&gt; -Tim Webster (&lt;strong&gt;Art of Data Engineering&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/en-us/learning/how-to-tutorials/10-reasons-data-scientists-love-jupyter-notebooks/"&gt;&lt;em&gt;10 Reasons Why Data Scientists Love Jupyter Notebooks&lt;/em&gt; -Aarthi Kumaraswamy (&lt;strong&gt;Packt&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cache.org/sites/default/files/S19-Jupyter-Notebooks.pdf"&gt;&lt;em&gt;Jupyter Notebooks for Chemical Engineering Education&lt;/em&gt; -Jeffrey C. Kantor (&lt;strong&gt;University of Notre Dame&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've come to enjoy Jupyter for use with electrical engineering work for many of the same reasons that scientists and
researchers enjoy it. Code cells right next to documentation cells makes for a truly wonderful and simple pairing.&lt;/p&gt;
&lt;p&gt;I'm not really here to sell you on Jupyter as a tool, however. I'm really here to describe what I feel is becoming the
best way to install Jupyter, to date.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;With Python's evolving landscape of package managers, &lt;a href="https://pipx.pypa.io/latest/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; has come to be my "go-to-tool"
for command-line applications both big and small. I won't go into great length about what it is and isn't, but I'll say
that it makes it possible to install great command-line applications in Python without dependency conflicts or disrupting
any system-level packages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, to cut to the chase...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;0. Install Python&lt;/h4&gt;
&lt;p&gt;The rest of these instructions really rely on Python already being installed. If you haven't done that, yet, now's the
time to remedy the situation!&lt;/p&gt;
&lt;h4&gt;1. Install &lt;code&gt;pipx&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Pipx is not a default package that's included with Python installations. So that's the first thing we'll need to install.
I could give specific directions, but instead, I'll refer you directly to &lt;a href="https://pipx.pypa.io/latest/installation/"&gt;their thorough documentation&lt;/a&gt;.
Follow their guide to getting pipx installed.&lt;/p&gt;
&lt;p&gt;I anticipate that many electrical engineers who might be reading this will be working with Windows. That does make things
ever so slightly trickier. I'd recommend that if you're running Windows, just use Python's &lt;code&gt;pip&lt;/code&gt; (the regular one) to
do the installation for you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;pipx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;â¹ï¸ &lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This assumes something important...&lt;/p&gt;
&lt;p&gt;It assumes that Python is already part of your Windows path. If it's not, or you run the command above and see an error
about "python could not be found" (or something similar), then you'll need to add Python to your path. For the sake of
brevity here, I'll point you towards &lt;a href="https://realpython.com/add-python-to-path/"&gt;another great article&lt;/a&gt; showing
information on that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;2. Installing Jupyter Lab with &lt;code&gt;pipx&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This is, perhaps, the easiest part. Just run the following command and let pipx do all of the work!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;--include-deps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;3. Install Jupyter Notebook with Jupyter Lab (so you have both)&lt;/h4&gt;
&lt;p&gt;I like to have both &lt;code&gt;jupyter notebook&lt;/code&gt; and &lt;code&gt;jupyter lab&lt;/code&gt; installed because for different use-cases, I use the different
applications. The following command will install the notebook server right alongside the lab server. This makes it really
easy to start either.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;inject&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;4. Add other Numerical Libraries&lt;/h4&gt;
&lt;p&gt;While we're at it, we might as well install some of the common Python numerical libraries. Things like &lt;code&gt;numpy&lt;/code&gt;, or &lt;code&gt;scipy&lt;/code&gt;
are, perhaps, most common. At the risk of becoming a shameless, self-promoter. Why don't we install
&lt;a href="https://electricpy.readthedocs.io/en/latest/"&gt;&lt;code&gt;electricpy&lt;/code&gt;&lt;/a&gt;; the Python package I began maintaining in 2018 which
contains all manner of electrical-engineering formulas. Luckily for us, it &lt;em&gt;depends&lt;/em&gt; on those other numerical libraries,
so when we install &lt;code&gt;electricpy&lt;/code&gt;, they'll come along for the ride!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;inject&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;electricpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;5. Profit!&lt;/h4&gt;
&lt;p&gt;As the "cool kids" like to say, it's time to profit off the efforts, now. Go ahead! Open a terminal and issue the
following command, you should see Jupyter Notebook spring to life in your browser and get right into it!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that when you ran that command, the session in your browser started up in the same folder... This means that
wherever your terminal is running when you start &lt;code&gt;jupyter notebook&lt;/code&gt; or &lt;code&gt;jupyter lab&lt;/code&gt;, that's where the browser session
will also start. By extension, you can see how you'd be able to open or work with any file just by navigating to that
directory in your terminal. For guides on that, take a look at the following articles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalcitizen.life/command-prompt-how-use-basic-commands/"&gt;&lt;em&gt;CMD: 11 basic commands you should know (cd, dir, mkdir, etc.)&lt;/em&gt; -Codrut Neagu (&lt;strong&gt;Digital Citizen&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phoenixnap.com/kb/bash-commands"&gt;&lt;em&gt;30 Bash Commands Cheat Sheet&lt;/em&gt; -Bosko Marijan (&lt;strong&gt;Phoenix NAP&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Now get out there, and engineer something awesome!&lt;/p&gt;</content><category term="education"></category><category term="calculations"></category><category term="jupyter"></category><category term="lab"></category><category term="notebook"></category><category term="python"></category><category term="research"></category><category term="study"></category><category term="university"></category></entry></feed>