<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stanley Solutions Blog - Self-Hosting</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/" rel="alternate"></link><link href="https://engineerjoe440.github.io/stanley-solutions-blog/feeds/self-hosting.atom.xml" rel="self"></link><id>https://engineerjoe440.github.io/stanley-solutions-blog/</id><updated>2022-08-26T16:27:00-07:00</updated><subtitle>Engineering and creativity - all under one hat.</subtitle><entry><title>Scraping the ISP Router to Support Self-Hosting</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/scraping-the-isp-router-to-support-selfhosting.html" rel="alternate"></link><published>2022-08-26T16:27:00-07:00</published><updated>2022-08-26T16:27:00-07:00</updated><author><name>Joe Stanley</name></author><id>tag:engineerjoe440.github.io,2022-08-26:/stanley-solutions-blog/scraping-the-isp-router-to-support-selfhosting.html</id><summary type="html">&lt;p&gt;To host my home services, I need to be able to have a dynamic-DNS, and to do that, I've been using DuckDNS (a great service, by the way), but it's time that I start getting more serious, and remove theCNAME from my domain, and get something a little more proper. But... to do that, I'll need my public IP. Good thing my ISP-provided-router displays that on the front page! Now, it's time for just a little Python...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Routers have all kinds of "good stuff." A literal wealth of information, all we need is to tap that resource, right? That's just exactly what I'm working on.&lt;/p&gt;
&lt;p&gt;See, I've started working on &lt;a href="https://github.com/engineerjoe440/ZiplyFrontierRouterStats"&gt;a project&lt;/a&gt; to scrape all of those "goodies" from my Ziply (formerly
Frontier) router. All the important, and relevant stuff is provided right there, in the front of the user-interface. My little project is pretty simple, I'll
scrape all of the useful bits into a big dictionary, then getting any of that data is a cinch!&lt;/p&gt;
&lt;p&gt;Python's already got all the horsepower that I need. I can use &lt;a href="https://pypi.org/project/requests/"&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt; to pull the web-page down, and then use a
little &lt;a href="https://pypi.org/project/beautifulsoup4/"&gt;&lt;code&gt;beautifulsoup&lt;/code&gt;&lt;/a&gt; to parse everything into where I need it. Simple, right?&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;Exactly!&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Now, I've got my little tool all spun up so I can use it directly on the command line, but I can also use it to host a little web-server with
&lt;a href="https://fastapi.tiangolo.com/"&gt;&lt;code&gt;FastAPI&lt;/code&gt;&lt;/a&gt; and &lt;a href="http://www.uvicorn.org/"&gt;&lt;code&gt;Uvicorn&lt;/code&gt;&lt;/a&gt; to host a simple little app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Want to scrape the router statistics to your terminal? No Problem.&lt;/li&gt;
&lt;li&gt;Want to scrape the router statistics and serve them in an easily-consumed web API? You bet!!! Even easier!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't have much else to say about the little project. Probably won't ever release it on PyPI, but if people ever asked, I suppose that I could. If you
want to see it for yourself, go check it out on &lt;a href="https://github.com/engineerjoe440/ZiplyFrontierRouterStats"&gt;my Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What's Next?&lt;/h2&gt;
&lt;p&gt;Well, I'm going to use this little tool, in conjunction with some Porkbun scripts to automate my DNS refreshes for my home-servers. This'll let me
bypass the reverse-DNS provided by DuckDNS (what I use right now), and let me get some better performance out of my system, as a whole! Namely,
I'll be able to change the CNAME records out for something a little more reliable for my home-server needs!&lt;/p&gt;
&lt;p&gt;Leave a comment if you've got thoughts, questions, or just want to say hi!&lt;/p&gt;</content><category term="Self-Hosting"></category><category term="Self-Hosting"></category><category term="Isp"></category><category term="Router"></category><category term="Networks"></category><category term="Ethernet"></category><category term="Servers"></category></entry><entry><title>More Servers in the Basement?</title><link href="https://engineerjoe440.github.io/stanley-solutions-blog/more-servers-in-the-basement.html" rel="alternate"></link><published>2022-04-03T21:09:00-07:00</published><updated>2022-04-03T21:09:00-07:00</updated><author><name>Joe Stanley</name></author><id>tag:engineerjoe440.github.io,2022-04-03:/stanley-solutions-blog/more-servers-in-the-basement.html</id><summary type="html">&lt;p&gt;It's spring; time for spring cleaning, right? Well, that's even more true if you've got half a dozen servers all floating around, waiting to be used. So I think it's about time that I get some of my new servers mounted in the basement to improve the general usage of my resources!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Alright, I really don't have much to say about this one, other than I've got some new servers mounted in the basement!&lt;/p&gt;
&lt;p&gt;I picked up some new server hardware including a really nice Synology NAS, and a 2-U 64-bit computer (yeah, I get excited about that since, remember,
most of my computing hardware is ancient 32-bit stuff). I'm really excited to start setting them up as the new home for my Nextcloud service, and a nice
backup file storage server to start sharing the load of all my git backups, etc. to some rugged machinery.&lt;/p&gt;
&lt;p&gt;Anyway... check it all out!!!&lt;/p&gt;
&lt;h3&gt;Update:&lt;/h3&gt;
&lt;p&gt;I've got even more computers now! Take a look!&lt;/p&gt;
&lt;p&gt;They're working to host Nextcloud, Gitea, Prometheus, Rainloop, Grafana, and more!&lt;/p&gt;</content><category term="Self-Hosting"></category><category term="Server"></category><category term="Web"></category><category term="Hosting"></category><category term="Self-Hosting"></category><category term="Hardware"></category><category term="Computing"></category></entry></feed>